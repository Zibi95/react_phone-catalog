{"version":3,"sources":["components/SpecTable/SpecTable.tsx","helpers/filters.ts","components/ProductCard/ProductCard.tsx","components/ProductCardSlider/ProductCardSlider.tsx","routes/NotFoundPage/NotFoundPage.tsx","components/ProductDetailsPage/About/About.tsx","components/ProductDetailsPage/CapacityPicker/CapacityPicker.tsx","components/ProductDetailsPage/ColorPicker/ColorPicker.tsx","components/ProductDetailsPage/Details/Details.tsx","components/ProductDetailsPage/ProductGallery/ProductGallery.tsx","components/ProductDetailsPage/ProductSpecPicker/ProductSpecPicker.tsx","routes/ProductDetailsPage/ProductDetailsPage.tsx"],"names":["SpecTable","specifications","style","fontSize","fontWeight","specCount","className","Object","entries","map","i","key","value","Array","isArray","join","sortProducts","products","activeFilter","sort","a","b","year","name","localeCompare","price","filterProducts","query","filter","toLowerCase","includes","getHotPriceProducts","productsToSort","aDiff","fullPrice","slice","getBrandNewProducts","getRandomProducts","numProducts","length","randomProducts","randomProduct","Math","floor","random","push","ProductCard","memo","product","image","screen","capacity","ram","itemId","category","useCart","addCartItem","isInCart","cartItems","some","item","id","specsToShow","Screen","Capacity","RAM","to","src","alt","onClick","width","height","isActive","productId","size","ProductCardSlider","title","useState","slide","setSlide","maxTransition","getVisibleNumberOfProducts","handleClick","useCallback","operation","prevSlide","newSlide","min","max","useEffect","svg","leftArrow","isDisabled","rightArrow","gap","NotFoundPage","home","About","description","textArray","text","CapacityPicker","capacities","replace","getClassNameForNavLink","changeProductId","matchColor","color","ColorPicker","colors","backgroundColor","Details","selectedProduct","images","colorsAvailable","capacityAvailable","priceDiscount","priceRegular","getProductSpecs","ProductGallery","selectedImage","setSelectedImage","counter","setCounter","classNames","type","onLoad","prevCounter","ProductSpecPicker","children","reducer","state","action","isLoading","error","payload","initialState","ProductDetailsPage","useReducer","dispatch","useParams","useProducts","mayAlsoLikeProducts","useMemo","phones","controller","AbortController","signal","getProductDetails","then","data","catch","err","message","scrollToTop","abort","FullPageLoader"],"mappings":"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","file":"static/js/3.37dee13c.chunk.js","sourcesContent":["import { Specifications } from '@typings/specifications';\nimport './SpecTable.scss';\n\ntype SpecTableProps = {\n  specifications: Specifications;\n  style?: { fontSize: number; fontWeight: number };\n  specCount?: number;\n};\n\nexport const SpecTable = ({\n  specifications,\n  style = { fontSize: 12, fontWeight: 600 },\n  specCount,\n}: SpecTableProps) => (\n  <table className=\"specification-table\">\n    <tbody style={style} className=\"specification-table__body\">\n      {Object.entries(specifications).map(([key, value], i) => {\n        if (specCount && specCount <= i) {\n          return null;\n        }\n\n        return (\n          <tr key={key} className=\"specification-table__row\">\n            <td className=\"specification-table__details\">{key}</td>\n            <td>{Array.isArray(value) ? value.join(', ') : value}</td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { Product } from '@typings/product';\n\nexport const sortProducts = (products: Product[], activeFilter: string) => {\n  switch (activeFilter) {\n    case 'age':\n      return products.sort((a, b) => b.year - a.year);\n    case 'name':\n      return products.sort((a, b) => a.name.localeCompare(b.name));\n    case 'price':\n      return products.sort((a, b) => a.price - b.price);\n    default:\n      return products;\n  }\n};\n\nexport const filterProducts = (products: Product[], query: string) => {\n  return products.filter(({ name }) => name.toLowerCase().includes(query.toLowerCase()));\n};\n\nexport const getHotPriceProducts = (productsToSort: Product[]) => productsToSort\n  .sort((a, b) => {\n    const aDiff = a.fullPrice - a.price;\n    const bDiff = b.fullPrice - b.price;\n\n    return bDiff - aDiff;\n  })\n  .slice(0, 16);\n\nexport const getBrandNewProducts = (productsToSort: Product[]) => productsToSort.sort((a, b) => b.year - a.year).slice(0, 16);\n\nexport const getRandomProducts = (products: Product[]): Product[] => {\n  const numProducts = products.length;\n  const randomProducts: Product[] = [];\n\n  if (numProducts <= 16) {\n    return products;\n  }\n\n  while (randomProducts.length < 16) {\n    const randomIndex = Math.floor(Math.random() * numProducts);\n    const randomProduct = products[randomIndex];\n\n    if (!randomProducts.includes(randomProduct)) {\n      randomProducts.push(randomProduct);\n    }\n  }\n\n  return randomProducts;\n};\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Product } from '@typings/product';\nimport { PrimaryButton, FavButton } from '@components/UI';\nimport { SpecTable } from '@components/SpecTable/SpecTable';\nimport { useCart } from '@contexts/cartContext';\nimport './ProductCard.scss';\n\ntype ProductCardProps = {\n  product: Product;\n};\n\nexport const ProductCard = memo(({ product }: ProductCardProps) => {\n  const {\n    image,\n    name,\n    price,\n    screen,\n    capacity,\n    ram,\n    fullPrice,\n    itemId,\n    category,\n  } = product;\n  const { addCartItem, cartItems } = useCart();\n\n  const isInCart = cartItems.some(item => item.id === itemId);\n\n  const specsToShow = {\n    Screen: screen,\n    Capacity: capacity,\n    RAM: ram,\n  };\n\n  return (\n    <div className=\"product-card\">\n      <Link to={`/${category}/${itemId}`} className=\"product-card__link\">\n        <img className=\"product-card__image\" src={image} alt={name} />\n\n        <p className=\"product-card__name\">{name}</p>\n      </Link>\n      <p className=\"product-card__price\">\n        {`$${price}`}\n        {fullPrice - price > 0 && (\n          <span className=\"product-card__price--strike\">{`$${fullPrice}`}</span>\n        )}\n      </p>\n\n      <div className=\"product-card__spec\">\n        <SpecTable specifications={specsToShow} />\n      </div>\n\n      <div className=\"product-card__controls\">\n        <PrimaryButton\n          onClick={() => addCartItem(product)}\n          width={176}\n          height={40}\n          isActive={isInCart}\n        >\n          Add to cart\n        </PrimaryButton>\n\n        <FavButton product={product} productId={itemId} size={40} />\n      </div>\n    </div>\n  );\n});\n","import { useCallback, useEffect, useState } from 'react';\n\nimport { ProductCard } from '@components/ProductCard';\nimport { Product } from '@typings/product';\nimport { Slider, IconButton } from '@components/UI';\nimport leftArrow from '@assets/svg/l_arrow.svg';\nimport rightArrow from '@assets/svg/r_arrow.svg';\nimport { getVisibleNumberOfProducts } from '@helpers/dom';\nimport './ProductCardSlider.scss';\n\ntype ProductCardSliderProps = {\n  title: string;\n  products: Product[];\n};\n\nexport const ProductCardSlider = ({\n  title,\n  products,\n}: ProductCardSliderProps) => {\n  const [slide, setSlide] = useState(0);\n\n  const maxTransition = products.length / getVisibleNumberOfProducts() - 1;\n\n  const handleClick = useCallback(\n    (operation: 1 | -1) => {\n      setSlide(prevSlide => {\n        const newSlide = prevSlide + operation;\n\n        if (operation === 1) {\n          return Math.min(maxTransition, newSlide);\n        }\n\n        return Math.max(0, newSlide);\n      });\n    },\n    [maxTransition],\n  );\n\n  useEffect(() => {\n    setSlide(0);\n  }, [maxTransition]);\n\n  return (\n    <div className=\"cards-container\">\n      <div className=\"cards-container__header\">\n        <h1 className=\"cards-container__title\">{title}</h1>\n\n        <div className=\"cards-container__controls\">\n          <IconButton\n            onClick={() => handleClick(-1)}\n            svg={leftArrow}\n            isDisabled={slide === 0}\n            alt=\"Slide left\"\n          />\n\n          <IconButton\n            onClick={() => handleClick(1)}\n            svg={rightArrow}\n            isDisabled={slide === maxTransition}\n            alt=\"Slide right\"\n          />\n        </div>\n      </div>\n\n      <Slider slide={slide} gap={16}>\n        {products.map(product => (\n          <ProductCard key={product.itemId} product={product} />\n        ))}\n      </Slider>\n    </div>\n  );\n};\n","import { Link } from 'react-router-dom';\n\nimport home from '@assets/svg/home.svg';\nimport './NotFoundPage.scss';\n\ntype NotFoundPageProps = {\n  title: string;\n};\n\nconst NotFoundPage = ({ title }: NotFoundPageProps) => (\n  <section className=\"not-found\">\n    <h1 className=\"not-found__title\">{title}</h1>\n    <Link className=\"not-found__link\" to=\"/home\">\n      <img className=\"not-found__image\" src={home} alt=\"Go to home page\" />\n      Go back to home page\n    </Link>\n  </section>\n);\n\nexport default NotFoundPage;\n","import './About.scss';\n\ntype AboutProps = {\n  description: { title: string; text: string[] }[];\n};\n\nexport const About = ({ description }: AboutProps) => (\n  <article className=\"about\">\n    <h2 className=\"about__title\">About</h2>\n    <ul className=\"about__description\">\n      {description.map(({ title, text: textArray }) => (\n        <li key={title}>\n          <h3 className=\"about__description-title\">{title}</h3>\n          <div className=\"about__description-text-container\">\n            {textArray.map(text => (\n              <p key={text} className=\"about__description-text\">{text}</p>\n            ))}\n          </div>\n        </li>\n      ))}\n    </ul>\n  </article>\n);\n","import { NavLink } from 'react-router-dom';\n\nimport {\n  changeProductId,\n  getClassNameForNavLink,\n} from '@helpers/stringOperations';\nimport { ProductSpecPicker } from '..';\nimport './CapacityPicker.scss';\n\ntype CapacityPickerProps = {\n  productId: string;\n  capacities: string[];\n};\n\nexport const CapacityPicker = ({\n  productId,\n  capacities,\n}: CapacityPickerProps) => (\n  <ProductSpecPicker title=\"Select capacity\">\n    {capacities.map(capacity => (\n      <li key={capacity}>\n        <NavLink\n          replace\n          className={getClassNameForNavLink('capacity')}\n          to={`../${changeProductId(productId, -2, capacity)}`}\n        >\n          {capacity}\n        </NavLink>\n      </li>\n    ))}\n  </ProductSpecPicker>\n);\n","import { NavLink } from 'react-router-dom';\n\nimport {\n  changeProductId,\n  getClassNameForNavLink,\n} from '@helpers/stringOperations';\nimport { ProductSpecPicker } from '..';\nimport './ColorPicker.scss';\n\ntype ColorPickerProps = {\n  productId: string;\n  colors: string[];\n};\n\nconst matchColor = (color: string) => {\n  switch (color) {\n    case 'midnightgreen':\n      return '#28372A';\n    case 'spacegray':\n      return '#717378';\n    case 'rosegold':\n      return '#B76E79';\n    default:\n      return color;\n  }\n};\n\nexport const ColorPicker = ({ productId, colors }: ColorPickerProps) => (\n  <ProductSpecPicker title=\"Available colors\">\n    {colors.map(color => (\n      <li key={color}>\n        <NavLink\n          replace\n          className={getClassNameForNavLink('color')}\n          to={`../${changeProductId(productId, -1, color)}`}\n        >\n          <div\n            className=\"color__container\"\n            style={{ backgroundColor: matchColor(color) }}\n          />\n        </NavLink>\n      </li>\n    ))}\n  </ProductSpecPicker>\n);\n","import { SpecTable } from '@components/SpecTable';\nimport { FavButton, PrimaryButton } from '@components/UI';\nimport { useCart } from '@contexts/cartContext';\nimport { getProductSpecs } from '@helpers/object';\nimport { ProductDetails } from '@typings/productDetails';\nimport { CapacityPicker, ColorPicker, ProductGallery } from '..';\nimport './Details.scss';\n\ntype DetailsProps = {\n  selectedProduct: ProductDetails;\n};\n\nexport const Details = ({ selectedProduct }: DetailsProps) => {\n  const {\n    id,\n    images,\n    name,\n    colorsAvailable,\n    capacityAvailable,\n    priceDiscount,\n    priceRegular,\n  } = selectedProduct;\n  const { addCartItem, cartItems } = useCart();\n  const isInCart = cartItems.some(item => item.id === id);\n\n  return (\n    <>\n      <ProductGallery key={id} images={images} name={name} />\n\n      <div className=\"details\">\n        <ColorPicker colors={colorsAvailable} productId={id} />\n        <CapacityPicker capacities={capacityAvailable} productId={id} />\n\n        <p className=\"details__price\">\n          {`$${priceDiscount}`}\n          <span className=\"details__price--strike\">{`$${priceRegular}`}</span>\n        </p>\n\n        <div className=\"details__controls\">\n          <PrimaryButton\n            isActive={isInCart}\n            onClick={() => addCartItem(selectedProduct)}\n            width={263}\n            height={48}\n          >\n            Add to cart\n          </PrimaryButton>\n\n          <FavButton product={selectedProduct} productId={id} size={48} />\n        </div>\n\n        <SpecTable\n          specifications={getProductSpecs(selectedProduct)}\n          specCount={4}\n        />\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\nimport { Loader } from '@components/UI';\nimport './ProductGallery.scss';\n\ntype ProductGalleryProps = {\n  images: string[];\n  name: string;\n};\n\nexport const ProductGallery = ({ images, name }: ProductGalleryProps) => {\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n  const [counter, setCounter] = useState(images.length);\n\n  useEffect(() => {\n    setSelectedImage(null);\n\n    if (counter === 0) {\n      setSelectedImage(images[0]);\n    }\n  }, [counter]);\n\n  return (\n    <div className=\"product-gallery\">\n      <ul className=\"product-gallery__slides\">\n        {images.map(image => (\n          <li key={image}>\n            <button\n              className={classNames('product-gallery__button', {\n                'product-gallery__button--active': image === selectedImage,\n              })}\n              type=\"button\"\n              onClick={() => setSelectedImage(image)}\n            >\n              <img\n                className=\"product-gallery__slide-image\"\n                src={image}\n                alt=\"\"\n                onLoad={() => setCounter(prevCounter => prevCounter - 1)}\n              />\n            </button>\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"product-gallery__wrapper\">\n        {selectedImage ? (\n          <img\n            key={selectedImage}\n            className=\"product-gallery__selected-image\"\n            src={selectedImage}\n            alt={name}\n          />\n        ) : (\n          <Loader width={150} />\n        )}\n      </div>\n    </div>\n  );\n};\n","import './ProductSpecPicker.scss';\n\ntype ProductSpecPickerProps = {\n  title: string\n};\n\nexport const ProductSpecPicker = ({\n  title,\n  children,\n}: React.PropsWithChildren<ProductSpecPickerProps>) => (\n  <div className=\"spec-picker\">\n    <p className=\"spec-picker__title\">{title}</p>\n\n    <ul className=\"spec-picker__list\">\n      {children}\n    </ul>\n  </div>\n);\n","import { useEffect, useMemo, useReducer } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { BackButton, Breadcrumbs, Loader } from '@components/UI';\nimport { About, Details } from '@components/ProductDetailsPage';\nimport { SpecTable } from '@components/SpecTable';\nimport { ProductDetails } from '@typings/productDetails';\nimport { getProductDetails } from '@helpers/requests';\nimport { getProductSpecs } from '@helpers/object';\nimport { FullPageLoader } from '@components/FullPageLoader';\nimport NotFoundPage from '@routes/NotFoundPage/NotFoundPage';\nimport './ProductDetailsPage.scss';\nimport { getRandomProducts } from '@helpers/filters';\nimport { useProducts } from '@contexts/productsContext';\nimport { ProductCardSlider } from '@components/ProductCardSlider';\nimport { scrollToTop } from '@helpers/dom';\n\ntype State = {\n  selectedProduct: ProductDetails | null;\n  isLoading: boolean;\n  error: string;\n};\n\ntype Action =\n  | { type: 'loading' }\n  | { type: 'selectedProduct/loaded'; payload: ProductDetails }\n  | { type: 'failed'; payload: string };\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'loading':\n      return { ...state, isLoading: true, error: '' };\n    case 'selectedProduct/loaded':\n      return { ...state, isLoading: false, selectedProduct: action.payload };\n    case 'failed':\n      if (action.payload === '404') {\n        return { ...state, isLoading: false, error: 'Phone was not found' };\n      }\n\n      return {\n        ...state,\n        isLoading: false,\n        error: 'Something went wrong, try again later',\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  selectedProduct: null,\n  isLoading: false,\n  error: '',\n};\n\nconst ProductDetailsPage = () => {\n  const [{ selectedProduct, isLoading, error }, dispatch] = useReducer(\n    reducer,\n    initialState,\n  );\n  const { productId = '' } = useParams();\n\n  const { products } = useProducts();\n  const mayAlsoLikeProducts = useMemo(\n    () => getRandomProducts(products.phones),\n    [selectedProduct],\n  );\n\n  const { name = '', description = [] } = selectedProduct || {};\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const { signal } = controller;\n\n    dispatch({ type: 'loading' });\n    getProductDetails(productId, signal)\n      .then(data => dispatch({ type: 'selectedProduct/loaded', payload: data }))\n      .catch(err => dispatch({ type: 'failed', payload: err.message }));\n\n    scrollToTop();\n\n    return () => controller.abort();\n  }, [productId]);\n\n  if (error) {\n    return <NotFoundPage title={error} />;\n  }\n\n  return (\n    <div className=\"product-details\">\n      <Breadcrumbs />\n      <BackButton />\n\n      {selectedProduct ? (\n        <>\n          <h1 className=\"product-details__name\">\n            {name}\n            {isLoading && <Loader width={25} />}\n          </h1>\n\n          <section className=\"product-details__info\">\n            <Details selectedProduct={selectedProduct} />\n\n            <p className=\"product-details__id\">{`ID: ${productId}`}</p>\n          </section>\n\n          <section className=\"product-details__info\">\n            <About description={description} />\n\n            <div className=\"product-details__specs\">\n              <h2 className=\"product-details__title\">Tech Specs</h2>\n              <SpecTable\n                style={{ fontSize: 14, fontWeight: 500 }}\n                specifications={getProductSpecs(selectedProduct)}\n              />\n            </div>\n          </section>\n\n          <section className=\"product-details__slider\">\n            <ProductCardSlider\n              title=\"You may also like\"\n              products={mayAlsoLikeProducts}\n            />\n          </section>\n        </>\n      ) : (\n        <FullPageLoader />\n      )}\n    </div>\n  );\n};\n\nexport default ProductDetailsPage;\n"],"sourceRoot":""}