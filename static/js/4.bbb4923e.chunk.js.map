{"version":3,"sources":["components/Pagination/Pagination.tsx","helpers/pagination.ts","components/UI/Select/Option.tsx","components/UI/Select/Select.tsx","routes/ProductPage/sorters.ts","routes/ProductPage/ProductPage.tsx","assets/svg/r_arrow.svg","components/UI/PrimaryButton/PrimaryButton.tsx","assets/svg/l_arrow.svg","components/SpecTable/SpecTable.tsx","assets/svg/home.svg","components/UI/IconButton/IconButton.tsx","helpers/filters.ts","assets/svg/heart_red.svg","components/UI/FavButton/FavButton.tsx","components/ProductCard/ProductCard.tsx","components/UI/Breadcrumbs/Breadcrumbs.tsx","components/ProductsList/ProductsList.tsx","routes/NotFoundPage/NotFoundPage.tsx","components/Search/Search.tsx"],"names":["Pagination","total","sortedProducts","useSearchParams","searchParams","setSearchParams","perPage","Number","get","page","handlePageChange","value","set","scrollToTop","numberOfPages","Math","ceil","visibleProducts","slice","currentPage","min","getItemsToShowIndex","useEffect","ProductsList","products","className","IconButton","onClick","isDisabled","svg","leftArrow","alt","Array","from","length","v","i","map","pageNumber","type","classNames","rightArrow","Option","name","label","onOptionChange","onChange","Select","width","options","useState","dropdownOpen","setDropdownOpen","handleChange","e","optionValue","target","selected","handleClickOutside","document","body","addEventListener","removeEventListener","style","Object","entries","key","perPageOptions","all","sortOptions","age","price","ProductPage","category","useProducts","error","activeSorter","query","categoryName","capitalizeString","productsNum","useMemo","sortProducts","NotFoundPage","title","Search","to","replace","Breadcrumbs","PrimaryButton","height","children","isActive","SpecTable","specifications","fontSize","fontWeight","specCount","isArray","join","disabled","src","activeFilter","sort","a","b","year","localeCompare","filterProducts","filter","toLowerCase","includes","getHotPriceProducts","productsToSort","aDiff","fullPrice","getBrandNewProducts","getRandomProducts","floor","random","FavButton","size","product","productId","useFav","addFavItem","deleteFavItem","isFav","favItems","some","item","itemId","heartRedIcon","heartIcon","ProductCard","memo","image","screen","capacity","ram","useCart","addCartItem","isInCart","cartItems","id","specsToShow","Screen","Capacity","RAM","breadCrumbs","useLocation","pathname","split","home","path","queredProducts"],"mappings":"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","file":"static/js/4.bbb4923e.chunk.js","sourcesContent":["import { useSearchParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport classNames from 'classnames';\n\nimport { IconButton } from '../UI/IconButton/IconButton';\nimport { ProductsList } from '../ProductsList/ProductsList';\nimport leftArrow from '../../assets/svg/l_arrow.svg';\nimport rightArrow from '../../assets/svg/r_arrow.svg';\nimport { getItemsToShowIndex } from '../../helpers/pagination';\nimport { scrollToTop } from '../../helpers/dom';\nimport { Product } from '../../types/product';\nimport './Pagination.scss';\n\ntype PaginationProps = {\n  total: number;\n  sortedProducts: Product[];\n};\n\nexport const Pagination = ({ total, sortedProducts }: PaginationProps) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const perPage = Number(searchParams.get('perPage')) || 'all';\n  const page = Number(searchParams.get('page')) || 1;\n\n  const handlePageChange = (value: number) => {\n    if (perPage !== 'all') {\n      searchParams.set('page', `${value}`);\n      setSearchParams(searchParams);\n      scrollToTop();\n    }\n  };\n\n  const numberOfPages\n    = perPage === 'all' ? 1 : Math.ceil(total / Number(perPage));\n\n  const visibleProducts = sortedProducts.slice(\n    ...getItemsToShowIndex(perPage, page, total),\n  );\n\n  useEffect(() => {\n    handlePageChange(1);\n  }, [perPage]);\n\n  return (\n    <>\n      <ProductsList products={visibleProducts} />\n      {numberOfPages > 1 && (\n        <ul className=\"pagination\" data-cy=\"pagination\">\n          <li>\n            <IconButton\n              onClick={() => handlePageChange(page - 1)}\n              isDisabled={page === 1}\n              svg={leftArrow}\n              data-cy=\"paginationLeft\"\n              alt=\"Pagination left button\"\n            />\n          </li>\n\n          <li>\n            <ul className=\"pagination__pages-container\">\n              {Array.from({ length: 5 }, (v, i) => i + page - 2).map(\n                pageNumber =>\n                  (pageNumber <= 0 || pageNumber > numberOfPages ? null : (\n                    <li key={pageNumber} className=\"pagination__page\">\n                      <button\n                        type=\"button\"\n                        className={classNames('pagination__button', {\n                          'pagination__button--active': pageNumber === page,\n                        })}\n                        onClick={() => handlePageChange(pageNumber)}\n                      >\n                        {pageNumber}\n                      </button>\n                    </li>\n                  )),\n              )}\n            </ul>\n          </li>\n\n          <li>\n            <IconButton\n              onClick={() => handlePageChange(page + 1)}\n              isDisabled={page === numberOfPages}\n              svg={rightArrow}\n              data-cy=\"paginationRight\"\n              alt=\"Pagination right button\"\n            />\n          </li>\n        </ul>\n      )}\n    </>\n  );\n};\n","export function getItemsToShowIndex(\n  perPage: string | number,\n  currentPage: number,\n  total: number,\n) {\n  if (typeof perPage === 'string') {\n    return [0, total];\n  }\n\n  const itemsTo = Math.min(perPage * currentPage, total);\n  const itemsFrom = perPage * (currentPage - 1);\n\n  return [itemsFrom, itemsTo];\n}\n","type OptionProps = {\n  value: string;\n  name: string;\n  label: string;\n  onOptionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const Option = ({\n  value, name, label, onOptionChange,\n}: OptionProps) => (\n  <label className=\"select__option\">\n    <input\n      onChange={onOptionChange}\n      value={value}\n      name={name}\n      type=\"radio\"\n      className=\"select__input\"\n    />\n    {label}\n  </label>\n);\n","import { ChangeEvent, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Option } from './Option';\nimport './Select.scss';\n\ntype SelectProps = {\n  label: string;\n  width: number;\n  name: string;\n  options: { [key: string]: string };\n};\n\nexport const Select = ({\n  label, width, name, options,\n}: SelectProps) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value: optionValue } = e.target;\n\n    searchParams.set(name, optionValue);\n    setSearchParams(searchParams);\n    setDropdownOpen(false);\n  };\n\n  const selected = options[searchParams.get(name) as string];\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      if (!dropdownOpen) {\n        setDropdownOpen(false);\n      }\n    };\n\n    document.body.addEventListener('mouseup', handleClickOutside);\n\n    return () => {\n      document.body.removeEventListener('mouseup', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div className=\"select\">\n      <label className=\"select__label\">{label}</label>\n      <div\n        style={{ width }}\n        className={classNames('select__wrapper', {\n          'select__wrapper--active': dropdownOpen,\n        })}\n      >\n        <button\n          onClick={() => setDropdownOpen(true)}\n          type=\"button\"\n          className=\"select__field\"\n        >\n          <span className=\"select__active\">{selected}</span>\n        </button>\n\n        <div\n          className={classNames('select__dropdown', {\n            'select__dropdown--active': dropdownOpen,\n          })}\n        >\n          {Object.entries(options).map(([key, value]) => (\n            <Option\n              key={key}\n              label={value}\n              value={key}\n              name={name}\n              onOptionChange={handleChange}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const perPageOptions: { [key: string]: string } = {\n  all: 'all',\n  4: '4',\n  8: '8',\n  16: '16',\n};\n\nexport const sortOptions: { [key: string]: string } = {\n  age: 'Newest',\n  name: 'Alphabetically',\n  price: 'Cheapest',\n};\n","import { Navigate, useSearchParams } from 'react-router-dom';\nimport { useEffect, useMemo } from 'react';\n\nimport { Breadcrumbs } from '../../components/UI/Breadcrumbs/Breadcrumbs';\nimport { Pagination } from '../../components/Pagination/Pagination';\nimport { sortProducts } from '../../helpers/filters';\nimport { Search } from '../../components/Search/Search';\nimport { ProductsMap, useProducts } from '../../contexts/productsContext';\nimport { capitalizeString } from '../../helpers/stringOperations';\nimport { Select } from '../../components/UI/Select/Select';\nimport { scrollToTop } from '../../helpers/dom';\nimport NotFoundPage from '../NotFoundPage/NotFoundPage';\nimport { sortOptions, perPageOptions } from './sorters';\nimport './ProductPage.scss';\n\nconst ProductPage = ({ category }: { category: string }) => {\n  const [searchParams] = useSearchParams();\n  const { products, error } = useProducts();\n\n  const activeSorter = searchParams.get('sort') || 'age';\n  const query = searchParams.get('query') || '';\n\n  const type = category as keyof ProductsMap;\n  const categoryName = capitalizeString(type);\n  const productsNum = products[type].length;\n\n  const sortedProducts = useMemo(\n    () => sortProducts(products[type], activeSorter),\n    [activeSorter],\n  );\n\n  useEffect(() => {\n    scrollToTop();\n  }, []);\n\n  if (error) {\n    return <NotFoundPage title=\"Something went wrong\" />;\n  }\n\n  if (query) {\n    return <Search query={query} products={sortedProducts} />;\n  }\n\n  return (\n    <div className=\"products-page\">\n      {!searchParams.get('sort') && (\n        <Navigate to=\"?sort=age&perPage=all\" replace />\n      )}\n\n      <Breadcrumbs />\n\n      {productsNum === 0 ? (\n        <h1 className=\"products-page__title\">{`${categoryName} not found`}</h1>\n      ) : (\n        <>\n          <h1 className=\"products-page__title\">{categoryName}</h1>\n          <p className=\"products-page__count\">{`${productsNum} models`}</p>\n          <div className=\"products-page__selectors\">\n            <Select\n              label=\"Sort by\"\n              width={176}\n              options={sortOptions}\n              name=\"sort\"\n            />\n\n            <Select\n              label=\"Items on page\"\n              width={128}\n              name=\"perPage\"\n              options={perPageOptions}\n            />\n          </div>\n          <section className=\"products-page__products-list\">\n            <Pagination sortedProducts={sortedProducts} total={productsNum} />\n          </section>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ProductPage;\n","export default __webpack_public_path__ + \"static/media/r_arrow.4240ad0e.svg\";","import classNames from 'classnames';\nimport './PrimaryButton.scss';\n\ntype PrimaryButtonProps = {\n  width: number;\n  height: number;\n  onClick: () => void;\n  children?: React.ReactNode;\n  isActive?: boolean;\n};\n\nexport const PrimaryButton = ({\n  width,\n  height,\n  children,\n  onClick,\n  isActive,\n}: PrimaryButtonProps) => (\n  <button\n    onClick={onClick}\n    style={{ width, height }}\n    className={classNames('cart-button', { 'cart-button--selected': isActive })}\n    type=\"button\"\n  >\n    {isActive ? 'Added to cart' : children}\n  </button>\n);\n","export default __webpack_public_path__ + \"static/media/l_arrow.081ebe62.svg\";","import { Specifications } from '../../types/specifications';\nimport './SpecTable.scss';\n\ntype SpecTableProps = {\n  specifications: Specifications;\n  style?: { fontSize: number; fontWeight: number };\n  specCount?: number;\n};\n\nexport const SpecTable = ({\n  specifications,\n  style = { fontSize: 12, fontWeight: 600 },\n  specCount,\n}: SpecTableProps) => (\n  <table className=\"specification-table\">\n    <tbody style={style} className=\"specification-table__body\">\n      {Object.entries(specifications).map(([key, value], i) => {\n        if (specCount && specCount <= i) {\n          return null;\n        }\n\n        return (\n          <tr key={key} className=\"specification-table__row\">\n            <td className=\"specification-table__details\">{key}</td>\n            <td>{Array.isArray(value) ? value.join(', ') : value}</td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","export default __webpack_public_path__ + \"static/media/home.1816ab2c.svg\";","import './IconButton.scss';\n\ntype IconButtonProps = {\n  onClick: () => void;\n  alt: string;\n  height?: number;\n  svg?: string;\n  isDisabled?: boolean;\n  children?: React.ReactNode;\n};\n\nexport const IconButton = ({\n  onClick,\n  svg,\n  alt,\n  isDisabled = false,\n  height = 32,\n  children,\n}: React.PropsWithChildren<IconButtonProps>) => {\n  return (\n    <button\n      style={{ height }}\n      className=\"button\"\n      type=\"button\"\n      onClick={onClick}\n      disabled={isDisabled}\n    >\n      {children || <img className=\"button__icon\" src={svg} alt={alt} />}\n    </button>\n  );\n};\n","import { Product } from '../types/product';\n\nexport const sortProducts = (products: Product[], activeFilter: string) => {\n  switch (activeFilter) {\n    case 'age':\n      return products.sort((a, b) => b.year - a.year);\n    case 'name':\n      return products.sort((a, b) => a.name.localeCompare(b.name));\n    case 'price':\n      return products.sort((a, b) => a.price - b.price);\n    default:\n      return products;\n  }\n};\n\nexport const filterProducts = (products: Product[], query: string) => {\n  return products.filter(({ name }) =>\n    name.toLowerCase().includes(query.toLowerCase()));\n};\n\nexport const getHotPriceProducts = (productsToSort: Product[]) =>\n  productsToSort\n    .sort((a, b) => {\n      const aDiff = a.fullPrice - a.price;\n      const bDiff = b.fullPrice - b.price;\n\n      return bDiff - aDiff;\n    })\n    .slice(0, 16);\n\nexport const getBrandNewProducts = (productsToSort: Product[]) =>\n  productsToSort.sort((a, b) => b.year - a.year).slice(0, 16);\n\nexport const getRandomProducts = (products: Product[]) => {\n  return Array.from(\n    { length: 16 },\n    () => products[Math.floor(Math.random() * products.length)],\n  );\n};\n","export default __webpack_public_path__ + \"static/media/heart_red.a3b711b5.svg\";","import classNames from 'classnames';\nimport heartIcon from '../../../assets/svg/heart.svg';\nimport heartRedIcon from '../../../assets/svg/heart_red.svg';\nimport { useFav } from '../../../contexts/favContext';\nimport { Product } from '../../../types/product';\nimport { ProductDetails } from '../../../types/productDetails';\nimport './FavButton.scss';\n\ntype FavButtonProps = {\n  size: number;\n  productId: string;\n  product: Product | ProductDetails;\n};\n\nexport const FavButton = ({ size, product, productId }: FavButtonProps) => {\n  const { addFavItem, deleteFavItem, favItems } = useFav();\n\n  const isFav = favItems.some(item => item.itemId === productId);\n\n  return (\n    <button\n      onClick={() => (isFav ? deleteFavItem(productId) : addFavItem(product))}\n      style={{ width: size, height: size }}\n      type=\"button\"\n      className=\"fav-button\"\n      data-cy={!isFav && 'addToFavorite'}\n    >\n      <img\n        className={classNames('fav-button__icon', {\n          'fav-button__icon--liked': isFav,\n        })}\n        src={isFav ? heartRedIcon : heartIcon}\n        alt={isFav ? 'Delete from favorites' : 'Add to favorites'}\n      />\n    </button>\n  );\n};\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Product } from '../../types/product';\nimport { PrimaryButton } from '../UI/PrimaryButton/PrimaryButton';\nimport { FavButton } from '../UI/FavButton/FavButton';\nimport { SpecTable } from '../SpecTable/SpecTable';\nimport { useCart } from '../../contexts/cartContext';\nimport './ProductCard.scss';\n\ntype ProductCardProps = {\n  product: Product;\n};\n\nexport const ProductCard = memo(({ product }: ProductCardProps) => {\n  const {\n    image,\n    name,\n    price,\n    screen,\n    capacity,\n    ram,\n    fullPrice,\n    itemId,\n    category,\n  } = product;\n  const { addCartItem, cartItems } = useCart();\n\n  const isInCart = cartItems.some(item => item.id === itemId);\n\n  const specsToShow = {\n    Screen: screen,\n    Capacity: capacity,\n    RAM: ram,\n  };\n\n  return (\n    <div className=\"product-card\">\n      <Link to={`/${category}/${itemId}`} className=\"product-card__link\">\n        <img className=\"product-card__image\" src={image} alt={name} />\n\n        <p className=\"product-card__name\">{name}</p>\n      </Link>\n      <p className=\"product-card__price\">\n        {`$${price}`}\n        {fullPrice - price > 0 && (\n          <span className=\"product-card__price--strike\">{`$${fullPrice}`}</span>\n        )}\n      </p>\n\n      <div className=\"product-card__spec\">\n        <SpecTable specifications={specsToShow} />\n      </div>\n\n      <div className=\"product-card__controls\">\n        <PrimaryButton\n          onClick={() => addCartItem(product)}\n          width={176}\n          height={40}\n          isActive={isInCart}\n        >\n          Add to cart\n        </PrimaryButton>\n\n        <FavButton product={product} productId={itemId} size={40} />\n      </div>\n    </div>\n  );\n});\n","import { Link, useLocation } from 'react-router-dom';\n\nimport { capitalizeString } from '../../../helpers/stringOperations';\nimport home from '../../../assets/svg/home.svg';\nimport rightArrow from '../../../assets/svg/r_arrow.svg';\nimport './Breadcrumbs.scss';\n\nexport const Breadcrumbs = () => {\n  const location = useLocation();\n\n  const breadCrumbs = location.pathname.slice(1).split('/');\n\n  return (\n    <nav className=\"bread-crumbs\" data-cy=\"breadCrumbs\">\n      <Link to=\"/home\">\n        <img className=\"bread-crumbs__icon\" src={home} alt=\"Home icon\" />\n      </Link>\n\n      {breadCrumbs.map((path, i) => (\n        <div key={path}>\n          <img className=\"bread-crumbs__icon--color-gray\" src={rightArrow} alt=\"\" />\n          {i === breadCrumbs.length - 1 ? (\n            <span>{capitalizeString(path)}</span>\n          ) : (\n            <Link className=\"bread-crumbs__link\" to={`/${path}`}>\n              {capitalizeString(path)}\n            </Link>\n          )}\n        </div>\n      ))}\n    </nav>\n  );\n};\n","import { Product } from '../../types/product';\nimport { ProductCard } from '../ProductCard/ProductCard';\nimport './ProductsList.scss';\n\ntype ProductsListProps = {\n  products: Product[] ;\n};\n\nexport const ProductsList = ({ products }: ProductsListProps) => {\n  return (\n    <>\n      <ul className=\"products-list\" data-cy=\"productList\">\n        {products.map(product => (\n          <li key={product.itemId}>\n            <ProductCard product={product} />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport home from '../../assets/svg/home.svg';\nimport './NotFoundPage.scss';\n\ntype NotFoundPageProps = {\n  title: string;\n};\n\nconst NotFoundPage = ({ title }: NotFoundPageProps) => (\n  <section className=\"not-found\">\n    <h1 className=\"not-found__title\">{title}</h1>\n    <Link className=\"not-found__link\" to=\"/home\">\n      <img className=\"not-found__image\" src={home} alt=\"Go to home page\" />\n      Go back to home page\n    </Link>\n  </section>\n);\n\nexport default NotFoundPage;\n","import { filterProducts } from '../../helpers/filters';\nimport { Product } from '../../types/product';\nimport { ProductsList } from '../ProductsList/ProductsList';\nimport './Search.scss';\n\ntype SearchProps = {\n  query: string;\n  products: Product[];\n};\n\nexport const Search = ({ query, products }: SearchProps) => {\n  const queredProducts = filterProducts(products, query);\n  const productsNum = queredProducts.length;\n\n  return (\n    <section className=\"search-results\">\n      {productsNum > 0 ? (\n        <>\n          <p className=\"search-results__count\">{`${productsNum} results`}</p>\n          <ProductsList products={queredProducts} />\n        </>\n      ) : (\n        <h1 className=\"search-results__title\">No Search Results</h1>\n      )}\n    </section>\n  );\n};\n"],"sourceRoot":""}