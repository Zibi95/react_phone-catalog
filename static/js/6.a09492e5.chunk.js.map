{"version":3,"sources":["components/SpecTable/SpecTable.tsx","helpers/filters.ts","components/ProductCard/ProductCard.tsx","components/ProductsList/ProductsList.tsx","components/ProductsList/index.js","components/Search/Search.tsx","routes/FavoritesPage/FavoritesPage.tsx"],"names":["SpecTable","specifications","style","fontSize","fontWeight","specCount","className","Object","entries","map","i","key","value","Array","isArray","join","sortProducts","products","activeFilter","sort","a","b","year","name","localeCompare","price","filterProducts","query","filter","toLowerCase","includes","getHotPriceProducts","productsToSort","aDiff","fullPrice","slice","getBrandNewProducts","getRandomProducts","numProducts","length","randomProducts","randomProduct","Math","floor","random","push","ProductCard","memo","product","image","screen","capacity","ram","itemId","category","useCart","addCartItem","isInCart","cartItems","some","item","id","specsToShow","Screen","Capacity","RAM","to","src","alt","onClick","width","height","isActive","productId","size","ProductsList","Search","queredProducts","productsNum","FavoritesPage","useSearchParams","searchParams","favItems","useFav","get"],"mappings":"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","file":"static/js/6.a09492e5.chunk.js","sourcesContent":["import { Specifications } from '@typings/specifications';\nimport './SpecTable.scss';\n\ntype SpecTableProps = {\n  specifications: Specifications;\n  style?: { fontSize: number; fontWeight: number };\n  specCount?: number;\n};\n\nexport const SpecTable = ({\n  specifications,\n  style = { fontSize: 12, fontWeight: 600 },\n  specCount,\n}: SpecTableProps) => (\n  <table className=\"specification-table\">\n    <tbody style={style} className=\"specification-table__body\">\n      {Object.entries(specifications).map(([key, value], i) => {\n        if (specCount && specCount <= i) {\n          return null;\n        }\n\n        return (\n          <tr key={key} className=\"specification-table__row\">\n            <td className=\"specification-table__details\">{key}</td>\n            <td>{Array.isArray(value) ? value.join(', ') : value}</td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { Product } from '@typings/product';\n\nexport const sortProducts = (products: Product[], activeFilter: string) => {\n  switch (activeFilter) {\n    case 'age':\n      return products.sort((a, b) => b.year - a.year);\n    case 'name':\n      return products.sort((a, b) => a.name.localeCompare(b.name));\n    case 'price':\n      return products.sort((a, b) => a.price - b.price);\n    default:\n      return products;\n  }\n};\n\nexport const filterProducts = (products: Product[], query: string) => {\n  return products.filter(({ name }) => name.toLowerCase().includes(query.toLowerCase()));\n};\n\nexport const getHotPriceProducts = (productsToSort: Product[]) => productsToSort\n  .sort((a, b) => {\n    const aDiff = a.fullPrice - a.price;\n    const bDiff = b.fullPrice - b.price;\n\n    return bDiff - aDiff;\n  })\n  .slice(0, 16);\n\nexport const getBrandNewProducts = (productsToSort: Product[]) => productsToSort.sort((a, b) => b.year - a.year).slice(0, 16);\n\nexport const getRandomProducts = (products: Product[]): Product[] => {\n  const numProducts = products.length;\n  const randomProducts: Product[] = [];\n\n  if (numProducts <= 16) {\n    return products;\n  }\n\n  while (randomProducts.length < 16) {\n    const randomIndex = Math.floor(Math.random() * numProducts);\n    const randomProduct = products[randomIndex];\n\n    if (!randomProducts.includes(randomProduct)) {\n      randomProducts.push(randomProduct);\n    }\n  }\n\n  return randomProducts;\n};\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Product } from '@typings/product';\nimport { PrimaryButton, FavButton } from '@components/UI';\nimport { SpecTable } from '@components/SpecTable/SpecTable';\nimport { useCart } from '@contexts/cartContext';\nimport './ProductCard.scss';\n\ntype ProductCardProps = {\n  product: Product;\n};\n\nexport const ProductCard = memo(({ product }: ProductCardProps) => {\n  const {\n    image,\n    name,\n    price,\n    screen,\n    capacity,\n    ram,\n    fullPrice,\n    itemId,\n    category,\n  } = product;\n  const { addCartItem, cartItems } = useCart();\n\n  const isInCart = cartItems.some(item => item.id === itemId);\n\n  const specsToShow = {\n    Screen: screen,\n    Capacity: capacity,\n    RAM: ram,\n  };\n\n  return (\n    <div className=\"product-card\">\n      <Link to={`/${category}/${itemId}`} className=\"product-card__link\">\n        <img className=\"product-card__image\" src={image} alt={name} />\n\n        <p className=\"product-card__name\">{name}</p>\n      </Link>\n      <p className=\"product-card__price\">\n        {`$${price}`}\n        {fullPrice - price > 0 && (\n          <span className=\"product-card__price--strike\">{`$${fullPrice}`}</span>\n        )}\n      </p>\n\n      <div className=\"product-card__spec\">\n        <SpecTable specifications={specsToShow} />\n      </div>\n\n      <div className=\"product-card__controls\">\n        <PrimaryButton\n          onClick={() => addCartItem(product)}\n          width={176}\n          height={40}\n          isActive={isInCart}\n        >\n          Add to cart\n        </PrimaryButton>\n\n        <FavButton product={product} productId={itemId} size={40} />\n      </div>\n    </div>\n  );\n});\n","import { Product } from '@typings/product';\nimport { ProductCard } from '@components/ProductCard';\nimport './ProductsList.scss';\n\ntype ProductsListProps = {\n  products: Product[] ;\n};\n\nexport const ProductsList = ({ products }: ProductsListProps) => {\n  return (\n    <>\n      <ul className=\"products-list\" data-cy=\"productList\">\n        {products.map(product => (\n          <li key={product.itemId}>\n            <ProductCard product={product} />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","export { ProductsList } from './ProductsList';\n","import { filterProducts } from '@helpers/filters';\nimport { Product } from '@typings/product';\nimport { ProductsList } from '@components/ProductsList';\nimport './Search.scss';\n\ntype SearchProps = {\n  query: string;\n  products: Product[];\n};\n\nexport const Search = ({ query, products }: SearchProps) => {\n  const queredProducts = filterProducts(products, query);\n  const productsNum = queredProducts.length;\n\n  return (\n    <section className=\"search-results\">\n      {productsNum > 0 ? (\n        <>\n          <p className=\"search-results__count\">{`${productsNum} results`}</p>\n          <ProductsList products={queredProducts} />\n        </>\n      ) : (\n        <h1 className=\"search-results__title\">No Search Results</h1>\n      )}\n    </section>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\n\nimport { ProductsList } from '@components/ProductsList/ProductsList';\nimport { Breadcrumbs } from '@components/UI/Breadcrumbs/Breadcrumbs';\nimport { useFav } from '@contexts/favContext';\nimport { Search } from '@components/Search/Search';\nimport './FavoritesPage.scss';\n\nconst FavoritesPage = () => {\n  const [searchParams] = useSearchParams();\n  const { favItems } = useFav();\n  const query = searchParams.get('query') || '';\n\n  if (query) {\n    return <Search query={query} products={favItems} />;\n  }\n\n  return (\n    <section className=\"favorites\">\n      <Breadcrumbs />\n      <h1 className=\"favorites__title\">Favorites</h1>\n\n      <p className=\"favorites__count\">{`${favItems.length} items`}</p>\n\n      <ProductsList products={favItems} />\n    </section>\n  );\n};\n\nexport default FavoritesPage;\n"],"sourceRoot":""}